#------Experiments to test (separated with commas)-----

data.experiments=['kv450_cf_likelihood_public']


#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo' or 'nuisance'

# Cosmological parameters list
# main parameters to extract:

data.parameters['omega_cdm']    = [0.118,   0.01, 0.99, 0,    1, 'cosmo']
data.parameters['ln10^{10}A_s'] = [3.158,   1.7, 5., 0,    1, 'cosmo']
data.parameters['omega_b']      = [0.022,  0.01875, 0.02625, 0,  1, 'cosmo']
data.parameters['n_s']          = [1.021,   0.7, 1.3, 0,    1, 'cosmo']
data.parameters['h']         	= [0.745,     0.64,   0.82,   0, 1, 'cosmo']

# Nuisance parameters:

# amplitude for intrinsic alignments (IA):
data.parameters['A_IA'] = [0.981, -6.0, 6.0, 0, 1, 'nuisance']


# parameters for baryon feedback with 'hmcode':
data.parameters['c_min'] = [2.484, 2., 3.13, 0, 1, 'cosmo']

# nuisance parameters for c-correction:
data.parameters['dc'] = [0., -0.0006, 0.0006, 0, 1, 'nuisance']
data.parameters['Ac'] = [1.022, 0.62, 1.40, 0, 1, 'nuisance']

### Delta-z parameters ###
data.parameters['D_z1'] = [-0.007, -0.117, 0.117, 0, 1, 'nuisance']
data.parameters['D_z2'] = [-0.010, -0.069, 0.069, 0, 1, 'nuisance']
data.parameters['D_z3'] = [ 0.013, -0.078, 0.078, 0, 1, 'nuisance']
data.parameters['D_z4'] = [ 0.001, -0.036, 0.036, 0, 1, 'nuisance']
data.parameters['D_z5'] = [-0.001, -0.033, 0.033, 0, 1, 'nuisance']

# Derived parameters:

data.parameters['Omega_m']      = [0.256, None, None, 0, 1, 'derived']
data.parameters['sigma8']       = [0.836, None, None, 0, 1, 'derived']

# Other cosmo parameters (fixed parameters, precision parameters, etc.)

# fix main cosmology to Planck:
data.cosmo_arguments['Omega_k'] = 0.

# The base model features two massless
# and one massive neutrino with m=0.06eV.
# The settings below ensures that these
# three species contribute equally
# to the radiation density at large
# redshift, with a total of Neff=3.046
data.cosmo_arguments['N_eff'] = 2.0328
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06
data.cosmo_arguments['T_ncdm'] = 0.71611

# standard BBN prediction of the primordial Helium abundance $Y_p$:
data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
data.cosmo_arguments['k_pivot'] = 0.05

# only needed for regular MCMC:
data.write_step = 1
