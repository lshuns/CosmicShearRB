#####################################################################
# Data and precision parameters for the KiDS+VIKING-450 correlation #
# function likelihood to be used with data from Hildebrandt et al.  #
# 2018 (arXiv:1812.06076) available from:                           #
#                                                                   #
# http://kids.strw.leidenuniv.nl/sciencedata.php                    #
#                                                                   #
# Adjusted to produce the theoretical xi_pm vector by Shun-Sheng Li #
#                                                                   #
# ATTENTION:                                                        #
# This likelihood only produces valid results for \Omega_k = 0,     #
# i.e. flat cosmologies!                                            #
#####################################################################


# ++++++++++++++++++++++++++++++++++++++ configuration
# which data sample is used
data.conf['sample'] = 'greater3'

# Set the output folder
#data.conf['out_folder'] = 'theory_vector'
#data.conf['out_suffix'] ='greater3_IA1'
#data.conf['out_suffix'] ='greater3_IA0'

# covariance matrix
# list form
data.conf['list_covariance'] = 'apr8_new/thps_cov_apr8_bb_list.dat'
# matrix form
data.conf['usable_covariance'] = 'apr8_new/thps_cov_apr8_bb_inc_m_usable.dat'

## BINNING OF THEORY VECTOR ##
# set this flag if you want to bin the theoretical xi_p/m functions with a weight function
# for fiducial KV450 analysis: True
data.conf['use_theory_binning'] = True

# if you want to read in (and interpolate) a weight function (expected as theta, weight):
# for fiducial KV450 analysis: False
data.conf['read_weight_func_for_binning'] = False
# supply path to weight-function file (ignored if flag above is False):
# for fiducial KV450 analysis: 'none'
data.conf['theory_weight_func_file'] = 'none'

# choose the calibration method for the redshift distributions from
# ['DIR', 'CCfit', 'sDIR', 'DIR_woCOSMOS', 'DIR_woCOSMOS-VVDS', 'DIR_woVVDS',
#  'DIR_woDEEP2', 'DIR_C15'], refer to the tarball's README for details!
# for fiducial KV450 analysis: 'DIR'
data.conf['nz_method'] = 'DIR'

# you can choose here any of the scipy.interpolate.interp1d types of interpolation
# (i.e. 'linear', 'nearest', 'zero', 'slinear', 'quadratic', 'cubic', 'previous',
# 'next' in SciPy v1.1.0) for the n(z) interpolation ('linear' is recommended)
# for fiducial KV450 analysis: 'linear'
data.conf['type_redshift_interp'] = 'linear'

# use masks to cut angular scales per tomographic bin
# for fiducial KV450 analysis: True
# (since we load the data vector and covariance matrix for all measured scales)
data.conf['use_cut_theta'] = True
# if True, select a cut scheme from the folder
# 'data_directory/SUPPLEMENTARY_FILES/CUT_VALUES/':
# for fiducial KV450 analysis: 'cut_values_5zbins.txt'
data.conf['cutvalues_file'] = 'cut_values_5zbins.txt'

# Method for integrating from Cl to xi_p/m, options:
# 1) 'cut_off' (method inherited from CFHTLenS likelihood, might be to coarse on large theta-scales)
# 2) 'brute_force' (also based on above method, but with adjusted cut-off scales and precision settings)
# 3) 'fftlog' (requires pycl2xi-package from "https://github.com/tilmantroester/pycl2xi")
# for fiducial KV450 analysis: 'brute_force'
data.conf['integrate_Bessel_with'] = 'brute_force'

## METHOD FOR NON-LINEAR CORRECTIONS ##
# choose the method for calculation of non-linear corrections, any CLASS keyword
# is possible, but the default choices are
# 1) 'halofit' (including Takahashi's update) and
# 2) 'hmcode' (Mead et al. 2015, 2016)
# the choice between the two affects also the choice of the baryon feedback
# modelling further below!
# for fiducial KV450 analysis: 'hmcode'
data.conf['method_non_linear_Pk'] = 'hmcode'

## INTRINSIC ALIGNMENTS (IA) ##
# if this flag is set to True, the linear matter power spectrum will be used for
# the II term in the intrinsic alignment model and for the GI term the geometric
# mean of the linear and non-linear matter power spectre will be used
# if set to False, the non-linear matter power spectrum will be used for both
# the II and GI term instead
# for fiducial KV450 analysis: False
data.conf['use_linear_pk_for_IA'] = False

## C-CORRECTION ##
# this allows to include nuisance parameters for the c-correction (per redshift
# bin):
# flag for using a theta-dependent c-term function:
# for fiducial KV450 analysis: True
data.conf['use_cterm_function'] = True

# +++++++++++++++++++++++++++++++++++++ hardly changed parameters

# point number of theta
data.const['ntheta'] = 9

# redshift bins
data.const['z_bins_min'] = [0.1, 0.3, 0.5, 0.7, 0.9]
data.const['z_bins_max'] = [0.3, 0.5, 0.7, 0.9, 1.2]

# for new theta-binning supply the smallest and highest bin border values in arcmin:
# for fiducial KV450 analysis: 0.5
data.const['theta_bin_min_val'] = 0.5
# for fiducial KV450 analysis: 300.
data.const['theta_bin_max_val'] = 300.

# supply constant for weight = theta * const.
# for fiducial KV450 analysis: 1.
data.const['theory_binning_const'] = 1.

# set here a number of theta nodes over which we integrate per theta_bin
# for fiducial KV450 analysis: 100
data.const['theta_nodes_theory'] = 100

## PRECISION SETTINGS ##
# these settings set the precision of the Cl integration
# maximum l for C_l
# for fiducial KV450 analysis: 60000
data.const['lmax'] = 60000

# logarithmic l step for C_l
# for fiducial KV450 analysis: 0.2
data.const['dlnl'] = 0.2

# Only relevant if you chose 1) or 2) for integrate_Bessel_with:
# parameters controlling the precision of the integral
# for the correlation function (int l C_l J(x))
# through the stepsize of x == l * theta
# (this also controls the speed of the likelihood,
# since this integral is the bottleneck)
# ATTENTION those might have to be adjusted for large scales!
# for fiducial KV450 analysis: 50.
data.const['xmax'] = 50.
# for fiducial KV450 analysis: 0.05
data.const['dx_below_threshold'] = 0.05
# for fiducial KV450 analysis: 0.15
data.const['dx_above_threshold'] = 0.15
# for fiducial KV450 analysis: 0.4
data.const['dx_threshold'] = 0.4
# for fiducial KV450 analysis: 0.25
data.const['dlntheta'] = 0.25

# scale k_max (in h/Mpc) up to which the non-linear corrections (of the matter
# power spectrum) are used/trusted (set to zero for k > k_max):
# for fiducial KV450 analysis: 100.
data.const['k_max_h_by_Mpc'] = 100.

